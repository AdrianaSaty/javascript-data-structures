# 9. Palindrome Number

## Solution

```javascript
/**
 * @param {number} x
 * @return {boolean}
 */
var isPalindrome = function (x) {
  const stringX = x.toString();
  let left = 0;
  let right = Number(stringX.length) - 1;

  while (left < right) {
    const rightString = stringX[right].toString();
    const leftString = stringX[left].toString();
    if (rightString != leftString) return false;
    left++;
    right--;
  }
  return true;
};
```

### ðŸ“ˆ Complexity Analysis

- **Time Complexity:** $ O(n) $ <br>
  â†’ where n is the number of digits in x.
  <br>
- **Space Complexity:** $O(n)$ <br>
  â†’ The string representation of the number (stringX) is created â†’ uses O(n) space.
